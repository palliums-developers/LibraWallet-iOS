//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: storage.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import Dispatch
import SwiftGRPC
import SwiftProtobuf

internal protocol Storage_StorageSaveTransactionsCall: ClientCallUnary {}

fileprivate final class Storage_StorageSaveTransactionsCallBase: ClientCallUnaryBase<Storage_SaveTransactionsRequest, Storage_SaveTransactionsResponse>, Storage_StorageSaveTransactionsCall {
  override class var method: String { return "/storage.Storage/SaveTransactions" }
}

internal protocol Storage_StorageUpdateToLatestLedgerCall: ClientCallUnary {}

fileprivate final class Storage_StorageUpdateToLatestLedgerCallBase: ClientCallUnaryBase<Types_UpdateToLatestLedgerRequest, Types_UpdateToLatestLedgerResponse>, Storage_StorageUpdateToLatestLedgerCall {
  override class var method: String { return "/storage.Storage/UpdateToLatestLedger" }
}

internal protocol Storage_StorageGetTransactionsCall: ClientCallUnary {}

fileprivate final class Storage_StorageGetTransactionsCallBase: ClientCallUnaryBase<Storage_GetTransactionsRequest, Storage_GetTransactionsResponse>, Storage_StorageGetTransactionsCall {
  override class var method: String { return "/storage.Storage/GetTransactions" }
}

internal protocol Storage_StorageGetAccountStateWithProofByVersionCall: ClientCallUnary {}

fileprivate final class Storage_StorageGetAccountStateWithProofByVersionCallBase: ClientCallUnaryBase<Storage_GetAccountStateWithProofByVersionRequest, Storage_GetAccountStateWithProofByVersionResponse>, Storage_StorageGetAccountStateWithProofByVersionCall {
  override class var method: String { return "/storage.Storage/GetAccountStateWithProofByVersion" }
}

internal protocol Storage_StorageGetStartupInfoCall: ClientCallUnary {}

fileprivate final class Storage_StorageGetStartupInfoCallBase: ClientCallUnaryBase<Storage_GetStartupInfoRequest, Storage_GetStartupInfoResponse>, Storage_StorageGetStartupInfoCall {
  override class var method: String { return "/storage.Storage/GetStartupInfo" }
}


/// Instantiate Storage_StorageServiceClient, then call methods of this protocol to make API calls.
internal protocol Storage_StorageService: ServiceClient {
  /// Synchronous. Unary.
  func saveTransactions(_ request: Storage_SaveTransactionsRequest) throws -> Storage_SaveTransactionsResponse
  /// Asynchronous. Unary.
  func saveTransactions(_ request: Storage_SaveTransactionsRequest, completion: @escaping (Storage_SaveTransactionsResponse?, CallResult) -> Void) throws -> Storage_StorageSaveTransactionsCall

  /// Synchronous. Unary.
  func updateToLatestLedger(_ request: Types_UpdateToLatestLedgerRequest) throws -> Types_UpdateToLatestLedgerResponse
  /// Asynchronous. Unary.
  func updateToLatestLedger(_ request: Types_UpdateToLatestLedgerRequest, completion: @escaping (Types_UpdateToLatestLedgerResponse?, CallResult) -> Void) throws -> Storage_StorageUpdateToLatestLedgerCall

  /// Synchronous. Unary.
  func getTransactions(_ request: Storage_GetTransactionsRequest) throws -> Storage_GetTransactionsResponse
  /// Asynchronous. Unary.
  func getTransactions(_ request: Storage_GetTransactionsRequest, completion: @escaping (Storage_GetTransactionsResponse?, CallResult) -> Void) throws -> Storage_StorageGetTransactionsCall

  /// Synchronous. Unary.
  func getAccountStateWithProofByVersion(_ request: Storage_GetAccountStateWithProofByVersionRequest) throws -> Storage_GetAccountStateWithProofByVersionResponse
  /// Asynchronous. Unary.
  func getAccountStateWithProofByVersion(_ request: Storage_GetAccountStateWithProofByVersionRequest, completion: @escaping (Storage_GetAccountStateWithProofByVersionResponse?, CallResult) -> Void) throws -> Storage_StorageGetAccountStateWithProofByVersionCall

  /// Synchronous. Unary.
  func getStartupInfo(_ request: Storage_GetStartupInfoRequest) throws -> Storage_GetStartupInfoResponse
  /// Asynchronous. Unary.
  func getStartupInfo(_ request: Storage_GetStartupInfoRequest, completion: @escaping (Storage_GetStartupInfoResponse?, CallResult) -> Void) throws -> Storage_StorageGetStartupInfoCall

}

internal final class Storage_StorageServiceClient: ServiceClientBase, Storage_StorageService {
  /// Synchronous. Unary.
  internal func saveTransactions(_ request: Storage_SaveTransactionsRequest) throws -> Storage_SaveTransactionsResponse {
    return try Storage_StorageSaveTransactionsCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func saveTransactions(_ request: Storage_SaveTransactionsRequest, completion: @escaping (Storage_SaveTransactionsResponse?, CallResult) -> Void) throws -> Storage_StorageSaveTransactionsCall {
    return try Storage_StorageSaveTransactionsCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func updateToLatestLedger(_ request: Types_UpdateToLatestLedgerRequest) throws -> Types_UpdateToLatestLedgerResponse {
    return try Storage_StorageUpdateToLatestLedgerCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func updateToLatestLedger(_ request: Types_UpdateToLatestLedgerRequest, completion: @escaping (Types_UpdateToLatestLedgerResponse?, CallResult) -> Void) throws -> Storage_StorageUpdateToLatestLedgerCall {
    return try Storage_StorageUpdateToLatestLedgerCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getTransactions(_ request: Storage_GetTransactionsRequest) throws -> Storage_GetTransactionsResponse {
    return try Storage_StorageGetTransactionsCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func getTransactions(_ request: Storage_GetTransactionsRequest, completion: @escaping (Storage_GetTransactionsResponse?, CallResult) -> Void) throws -> Storage_StorageGetTransactionsCall {
    return try Storage_StorageGetTransactionsCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getAccountStateWithProofByVersion(_ request: Storage_GetAccountStateWithProofByVersionRequest) throws -> Storage_GetAccountStateWithProofByVersionResponse {
    return try Storage_StorageGetAccountStateWithProofByVersionCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func getAccountStateWithProofByVersion(_ request: Storage_GetAccountStateWithProofByVersionRequest, completion: @escaping (Storage_GetAccountStateWithProofByVersionResponse?, CallResult) -> Void) throws -> Storage_StorageGetAccountStateWithProofByVersionCall {
    return try Storage_StorageGetAccountStateWithProofByVersionCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getStartupInfo(_ request: Storage_GetStartupInfoRequest) throws -> Storage_GetStartupInfoResponse {
    return try Storage_StorageGetStartupInfoCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func getStartupInfo(_ request: Storage_GetStartupInfoRequest, completion: @escaping (Storage_GetStartupInfoResponse?, CallResult) -> Void) throws -> Storage_StorageGetStartupInfoCall {
    return try Storage_StorageGetStartupInfoCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}

/// To build a server, implement a class that conforms to this protocol.
/// If one of the methods returning `ServerStatus?` returns nil,
/// it is expected that you have already returned a status to the client by means of `session.close`.
internal protocol Storage_StorageProvider: ServiceProvider {
  func saveTransactions(request: Storage_SaveTransactionsRequest, session: Storage_StorageSaveTransactionsSession) throws -> Storage_SaveTransactionsResponse
  func updateToLatestLedger(request: Types_UpdateToLatestLedgerRequest, session: Storage_StorageUpdateToLatestLedgerSession) throws -> Types_UpdateToLatestLedgerResponse
  func getTransactions(request: Storage_GetTransactionsRequest, session: Storage_StorageGetTransactionsSession) throws -> Storage_GetTransactionsResponse
  func getAccountStateWithProofByVersion(request: Storage_GetAccountStateWithProofByVersionRequest, session: Storage_StorageGetAccountStateWithProofByVersionSession) throws -> Storage_GetAccountStateWithProofByVersionResponse
  func getStartupInfo(request: Storage_GetStartupInfoRequest, session: Storage_StorageGetStartupInfoSession) throws -> Storage_GetStartupInfoResponse
}

extension Storage_StorageProvider {
  internal var serviceName: String { return "storage.Storage" }

  /// Determines and calls the appropriate request handler, depending on the request's method.
  /// Throws `HandleMethodError.unknownMethod` for methods not handled by this service.
  internal func handleMethod(_ method: String, handler: Handler) throws -> ServerStatus? {
    switch method {
    case "/storage.Storage/SaveTransactions":
      return try Storage_StorageSaveTransactionsSessionBase(
        handler: handler,
        providerBlock: { try self.saveTransactions(request: $0, session: $1 as! Storage_StorageSaveTransactionsSessionBase) })
          .run()
    case "/storage.Storage/UpdateToLatestLedger":
      return try Storage_StorageUpdateToLatestLedgerSessionBase(
        handler: handler,
        providerBlock: { try self.updateToLatestLedger(request: $0, session: $1 as! Storage_StorageUpdateToLatestLedgerSessionBase) })
          .run()
    case "/storage.Storage/GetTransactions":
      return try Storage_StorageGetTransactionsSessionBase(
        handler: handler,
        providerBlock: { try self.getTransactions(request: $0, session: $1 as! Storage_StorageGetTransactionsSessionBase) })
          .run()
    case "/storage.Storage/GetAccountStateWithProofByVersion":
      return try Storage_StorageGetAccountStateWithProofByVersionSessionBase(
        handler: handler,
        providerBlock: { try self.getAccountStateWithProofByVersion(request: $0, session: $1 as! Storage_StorageGetAccountStateWithProofByVersionSessionBase) })
          .run()
    case "/storage.Storage/GetStartupInfo":
      return try Storage_StorageGetStartupInfoSessionBase(
        handler: handler,
        providerBlock: { try self.getStartupInfo(request: $0, session: $1 as! Storage_StorageGetStartupInfoSessionBase) })
          .run()
    default:
      throw HandleMethodError.unknownMethod
    }
  }
}

internal protocol Storage_StorageSaveTransactionsSession: ServerSessionUnary {}

fileprivate final class Storage_StorageSaveTransactionsSessionBase: ServerSessionUnaryBase<Storage_SaveTransactionsRequest, Storage_SaveTransactionsResponse>, Storage_StorageSaveTransactionsSession {}

internal protocol Storage_StorageUpdateToLatestLedgerSession: ServerSessionUnary {}

fileprivate final class Storage_StorageUpdateToLatestLedgerSessionBase: ServerSessionUnaryBase<Types_UpdateToLatestLedgerRequest, Types_UpdateToLatestLedgerResponse>, Storage_StorageUpdateToLatestLedgerSession {}

internal protocol Storage_StorageGetTransactionsSession: ServerSessionUnary {}

fileprivate final class Storage_StorageGetTransactionsSessionBase: ServerSessionUnaryBase<Storage_GetTransactionsRequest, Storage_GetTransactionsResponse>, Storage_StorageGetTransactionsSession {}

internal protocol Storage_StorageGetAccountStateWithProofByVersionSession: ServerSessionUnary {}

fileprivate final class Storage_StorageGetAccountStateWithProofByVersionSessionBase: ServerSessionUnaryBase<Storage_GetAccountStateWithProofByVersionRequest, Storage_GetAccountStateWithProofByVersionResponse>, Storage_StorageGetAccountStateWithProofByVersionSession {}

internal protocol Storage_StorageGetStartupInfoSession: ServerSessionUnary {}

fileprivate final class Storage_StorageGetStartupInfoSessionBase: ServerSessionUnaryBase<Storage_GetStartupInfoRequest, Storage_GetStartupInfoResponse>, Storage_StorageGetStartupInfoSession {}

